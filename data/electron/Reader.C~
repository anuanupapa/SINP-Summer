#define Reader_cxx
#include "Reader.h"
#include <TH2.h>
#include <TStyle.h>
#include <TCanvas.h>

void Reader::Loop()
{
//   In a ROOT session, you can do:
//      root> .L Reader.C
//      root> Reader t
//      root> t.GetEntry(12); // Fill t data members with entry number 12
//      root> t.Show();       // Show values of entry 12
//      root> t.Show(16);     // Read and show values of entry 16
//      root> t.Loop();       // Loop on all entries
//

//     This is the loop skeleton where:
//    jentry is the global entry number in the chain
//    ientry is the entry number in the current Tree
//  Note that the argument to GetEntry must be:
//    jentry for TChain::GetEntry
//    ientry for TTree::GetEntry and TBranch::GetEntry
//
//       To read only selected branches, Insert statements like:
// METHOD1:
//    fChain->SetBranchStatus("*",0);  // disable all branches
//    fChain->SetBranchStatus("branchname",1);  // activate branchname
// METHOD2: replace line
//    fChain->GetEntry(jentry);       //read all branches
//by  b_branchname->GetEntry(ientry); //read only this branch
   if (fChain == 0) return;
   Int_t pos=0 ,ele=0;
   Long64_t nentries = fChain->GetEntriesFast();
   Long64_t nbytes = 0, nb = 0;
   for (Long64_t jentry=0; nentries/2;jentry++) {
      Long64_t ientry = LoadTree(jentry);
      if (ientry < 0) break;
      nb = fChain->GetEntry(jentry);   nbytes += nb;
      // if (Cut(ientry) < 0) continue;

	for (vector<int>::iterator it=eleCharge->begin(); it!=eleCharge->end(); ++it)
	{
		cout<<*it<<" | ";
		if (*it==-1){ele=ele+1;}
		else {pos=pos+1;}
//		v.push_back(*it);
	}
//	for (vector<float>::iterator it=v.begin(); it!=v.end(); ++it)
//	{
//		cout<<*it<<" | ";
//	}
	cout<<endl;
	}
	cout<<"pos="<<pos<<" ele="<<ele<<endl;
}
