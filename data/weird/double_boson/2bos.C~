#define 2bos_cxx
#include "2bos.h"
#include <TH2.h>
#include <TStyle.h>
#include <TCanvas.h>

void 2bos::Loop()
{
//   In a ROOT session, you can do:
//      root> .L 2bos.C
//      root> 2bos t
//      root> t.GetEntry(12); // Fill t data members with entry number 12
//      root> t.Show();       // Show values of entry 12
//      root> t.Show(16);     // Read and show values of entry 16
//      root> t.Loop();       // Loop on all entries
//

//     This is the loop skeleton where:
//    jentry is the global entry number in the chain
//    ientry is the entry number in the current Tree
//  Note that the argument to GetEntry must be:
//    jentry for TChain::GetEntry
//    ientry for TTree::GetEntry and TBranch::GetEntry
//
//       To read only selected branches, Insert statements like:
// METHOD1:
//    fChain->SetBranchStatus("*",0);  // disable all branches
//    fChain->SetBranchStatus("branchname",1);  // activate branchname
// METHOD2: replace line
//    fChain->GetEntry(jentry);       //read all branches
//by  b_branchname->GetEntry(ientry); //read only this branch
   if (fChain == 0) return;
   auto c = new TCanvas();

   Long64_t nentries = fChain->GetEntriesFast();

   auto h1 = new TH1F("h1","ele",160,-10,150);
   auto h2 = new TH1F("h1","mu",160,-10,150);
   Long64_t nbytes = 0, nb = 0;
   for (Long64_t jentry=0; jentry<nentries;jentry++) {
      Long64_t ientry = LoadTree(jentry);
      if (ientry < 0) break;
      Float_t mag1,mag2;
      TLorentzVector v1,v2,v3,v4;
      nb = fChain->GetEntry(jentry);   nbytes += nb;
      // if (Cut(ientry) < 0) continue;
      if(nEle<2 || nMu<2) continue;
     
	  v1.SetPtEtaPhiE(elePt->at(0),eleEta->at(0),elePhi->at(0),eleEn->at(0));        
	  v2.SetPtEtaPhiE(elePt->at(1),eleEta->at(1),elePhi->at(1),eleEn->at(1));

	  v3.SetPtEtaPhiE(muPt->at(0),muEta->at(0),muPhi->at(0),muEn->at(0));
	  v4.SetPtEtaPhiE(muPt->at(1),muEta->at(1),muPhi->at(1),muEn->at(1));          

	  mag1=(v1+v2).M();
	  mag2=(v3+v4).M();
	  h1->Fill(mag1);
	  h2->Fill(mag2);
   }

   c->cd(1);
   h1->Draw();

   c->cd(2);
   h2->Draw();

   c->Print("double_boson.pdf")
}
