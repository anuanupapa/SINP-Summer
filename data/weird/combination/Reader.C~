#define Reader_cxx
#include "Reader.h"
#include <TH2.h>
#include <TStyle.h>
#include <TCanvas.h>

void Reader::Loop()
{
//   In a ROOT session, you can do:
//      root> .L Reader.C
//      root> Reader t
//      root> t.GetEntry(12); // Fill t data members with entry number 12
//      root> t.Show();       // Show values of entry 12
//      root> t.Show(16);     // Read and show values of entry 16
//      root> t.Loop();       // Loop on all entries
//

//     This is the loop skeleton where:
//    jentry is the global entry number in the chain
//    ientry is the entry number in the current Tree
//  Note that the argument to GetEntry must be:
//    jentry for TChain::GetEntry
//    ientry for TTree::GetEntry and TBranch::GetEntry
//
//       To read only selected branches, Insert statements like:
// METHOD1:
//    fChain->SetBranchStatus("*",0);  // disable all branches
//    fChain->SetBranchStatus("branchname",1);  // activate branchname
// METHOD2: replace line
//    fChain->GetEntry(jentry);       //read all branches
//by  b_branchname->GetEntry(ientry); //read only this branch
  if (fChain == 0) return;
  auto h = new TH1F("h","graph",210,-10,200);
  Long64_t nentries = fChain->GetEntriesFast();
  Long64_t nbytes = 0, nb = 0;
  for (Long64_t jentry=0; jentry<nentries;jentry++) {
    Long64_t ientry = LoadTree(jentry);
    if (ientry < 0) break;
    nb = fChain->GetEntry(jentry);   nbytes += nb;
    // if (Cut(ientry) < 0) continue;
    if(nEle>1){
      float mag;
      TLorentzVector v1,v2;
      int l=-1;
      for(int i=0; i<nEle; ++i)
	{
	  l=l+1;
	  if(eleCharge->at(0)!=eleCharge->at(i)) break;
     	}
      if(eleCharge->at(0)!=eleCharge->at(l))
	{
	  v1.SetPtEtaPhiE(elePt->at(0),eleEta->at(0),elePhi->at(0),eleEn->at(0));
	  v2.SetPtEtaPhiE(elePt->at(l),eleEta->at(l),elePhi->at(l),eleEn->at(l));
	  mag=(v1+v2).M();
	  h->Fill(mag);
	  cout<<mag<<endl;
	}
    }
    
  }
  h->Draw();
}
